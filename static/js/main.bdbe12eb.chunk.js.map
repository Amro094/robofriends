{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","marginTop","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WACzD,gCACE,6BAAKL,IACL,4BAAIC,WCiBGK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BAGIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UCEdS,EAbG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACnB,OACE,8BACE,uBACET,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEHI,EATA,SAACC,GACd,OACE,qBACEC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,UAAW,QADvF,SAEKL,EAAMM,YCgBAC,E,kDAnBb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACCQ,MAAQ,CACXC,UAAU,GAHG,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACL,2DAEFG,KAAKZ,MAAMM,a,GAhBKQ,aCsEZC,G,wDA9Db,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKZ,MAAQ,CACXlB,OAAQ,GACR4B,YAAa,IAJH,E,gEAQO,IAAD,OAElBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAAEvB,OAAQmC,S,+BAOnC,MAEyBb,KAAKJ,MAA7BlB,EAFD,EAECA,OAAQ4B,EAFT,EAESA,YAEVQ,EAAiBpC,EAAOqC,QAAO,SAAAC,GACnC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAoBvD,OAAKvC,EAAOyC,OAIR,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQoC,WARnB,oBAAIxC,UAAU,KAAd,4B,GA9CK4B,cCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bdbe12eb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst Card = ({ name, email, id}) => {\r\n  return(\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n  return(\r\n    <div>\r\n      {\r\n        // Mapping through robots array to grab all array elements\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card \r\n              key={robots[i].id} \r\n              id={robots[i].id} \r\n              name={robots[i].name} \r\n              email={robots[i].email} \r\n            />\r\n          ) \r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\n\r\nconst SearchBox = ({ searchChange}) => {\r\n  return (\r\n    <div>\r\n      <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots' \r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return(\r\n    <div \r\n      style={{ overflowY: 'scroll', border: '1px solid black', height: '800px', marginTop: '10px'}}>\r\n        {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n      this.state = {\r\n        hasError: false\r\n      }\r\n  }\r\n\r\n  componentDidMount(error, info) {\r\n    this.setState({ hasError: false })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <h1>Oooops. That is not good!</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n// import { robots } from './robots'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // fetch the users from url\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => {this.setState({ robots: users})})\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value})\r\n  }\r\n\r\n  render() {\r\n    // destructuring\r\n    const { robots, searchfield } = this.state\r\n\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n\r\n    // robots.length === 0 ==> !robots.length\r\n\r\n    // we can do if/else with iteranry (? :)\r\n    /*\r\n      return (!robots.length) ?\r\n        <h1 className='tc'>Loading...</h1> :\r\n        (\r\n          <div className='tc'>\r\n            <h1 className='f2'>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange} />\r\n            <Scroll>\r\n              <CardList robots={filteredRobots}/>\r\n            </Scroll>\r\n          </div> \r\n        )\r\n    \r\n    */\r\n    if (!robots.length) {\r\n      return <h1 className='tc'>Loading...</h1>\r\n    } else {\r\n      return(\r\n        <div className='tc'>\r\n          <h1 className='f2'>RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots}/>\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div> \r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}